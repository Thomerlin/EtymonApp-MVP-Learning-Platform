name: Deploy to Hostinger

on:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js 22
        uses: actions/setup-node@v3
        with:
          node-version: '22'
          cache: 'npm'                                # :contentReference[oaicite:6]{index=6}

      - name: Install dependencies
        run: |
          cd server && npm ci
          cd ../client && npm ci

      - name: Build client (Angular 17)
        run: |
          cd client
          npm run build -- --configuration production  # :contentReference[oaicite:7]{index=7}

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Decode Google credentials
        env:
          GOOGLE_APPLICATION_CREDENTIALS: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
        run: |
          mkdir -p server/config
          echo "$GOOGLE_APPLICATION_CREDENTIALS" | base64 --decode > server/config/google-credentials.json
          chmod 600 server/config/google-credentials.json  # :contentReference[oaicite:8]{index=8}

      - name: Create production .env
        run: |
          cat > server/.env <<EOF
          NODE_ENV=production
          JWT_SECRET=${{ secrets.JWT_SECRET }}
          SESSION_SECRET=${{ secrets.SESSION_SECRET }}
          JWT_AUDIENCE=etymonapp.com/api
          JWT_ISSUER=etymonapp.com
          PORT=3000
          CLIENT_URL=https://etymonapp.com
          SERVER_URL=https://api.etymonapp.com
          ALLOWED_ORIGINS=https://etymonapp.com,https://www.etymonapp.com,https://api.etymonapp.com
          GOOGLE_APPLICATION_CREDENTIALS=./config/google-credentials.json
          GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }}
          GOOGLE_CLIENT_SECRET=${{ secrets.GOOGLE_CLIENT_SECRET }}
          GOOGLE_CALLBACK_URL=https://api.etymonapp.com/api/auth/google/callback
          EMAIL_ADM=${{ secrets.EMAIL_ADM }}
          EOF

      - name: Deploy files via SCP
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.HOSTINGER_HOST }}
          username: ${{ secrets.HOSTINGER_USER }}
          port: ${{ secrets.HOSTINGER_PORT }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "server/,client/dist/client/"
          target: "~/etymonapp"                         # :contentReference[oaicite:9]{index=9}

      - name: Restart Node.js app via SSH
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.HOSTINGER_HOST }}
          username: ${{ secrets.HOSTINGER_USER }}
          port: ${{ secrets.HOSTINGER_PORT }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd ~/etymonapp/server
            npm install --production
            pm2 restart ecosystem.config.js || pm2 start ecosystem.config.js  # :contentReference[oaicite:10]{index=10}
