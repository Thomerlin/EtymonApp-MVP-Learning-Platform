name: Deploy to Hostinger VPS

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: |
          cd server
          npm ci
          cd ../client
          npm ci

      - name: Build client
        run: |
          cd client
          npm run build

      - name: Create directories if needed
        run: |
          mkdir -p server/config

      - name: Decode Google credentials
        env:
          GOOGLE_APPLICATION_CREDENTIALS: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
        run: |
          echo "$GOOGLE_APPLICATION_CREDENTIALS" | base64 -d > server/config/google-credentials.json
          chmod 644 server/config/google-credentials.json

      - name: Create production .env file
        run: |
          cat > server/.env << EOF
          NODE_ENV=production
          JWT_SECRET=${{ secrets.JWT_SECRET }}
          SESSION_SECRET=${{ secrets.SESSION_SECRET }}
          JWT_AUDIENCE=etymonapp.com/api
          JWT_ISSUER=etymonapp.com
          PORT=3000
          CLIENT_URL=https://etymonapp.com
          SERVER_URL=https://api.etymonapp.com
          ALLOWED_ORIGINS=https://etymonapp.com,https://www.etymonapp.com,https://api.etymonapp.com
          GOOGLE_APPLICATION_CREDENTIALS=./config/google-credentials.json
          GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }}
          GOOGLE_CLIENT_SECRET=${{ secrets.GOOGLE_CLIENT_SECRET }}
          GOOGLE_CALLBACK_URL=https://api.etymonapp.com/api/auth/google/callback
          EMAIL_ADM=${{ secrets.EMAIL_ADM }}
          EOF

      - name: Create PM2 ecosystem config
        run: |
          cat > server/ecosystem.config.js << EOF
          module.exports = {
            apps: [{
              name: "etymon-api",
              script: "./dist/index.js",
              env: {
                NODE_ENV: "production"
              },
              instances: 1,
              exec_mode: "cluster",
              max_memory_restart: "300M"
            }]
          }
          EOF

      - name: Setup SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.HOSTINGER_HOST }} >> ~/.ssh/known_hosts

      - name: Deploy to Hostinger via SSH
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.HOSTINGER_HOST }}
          username: ${{ secrets.HOSTINGER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.HOSTINGER_PORT }}
          source: "./server/,./client/dist/client/"
          target: "~/etymonapp"
          strip_components: 0
          timeout: 60s
          command_timeout: 20m

      - name: SSH - Setup and restart server
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.HOSTINGER_HOST }}
          username: ${{ secrets.HOSTINGER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.HOSTINGER_PORT }}
          script: |
            cd ~/etymonapp/server
            npm ci --production
            npm run build
            if pm2 list | grep -q "etymon-api"; then
              pm2 restart etymon-api
            else
              pm2 start ecosystem.config.js
            fi
            
            # Setup Nginx if not already configured (optional)
            if [ ! -f /etc/nginx/sites-available/etymonapp.com ]; then
              echo "You may need to manually set up Nginx configuration for etymonapp.com"
            fi
