name: Deploy to Production

on:
  push:
    branches:
      - main  # Adjust if your production branch is different

jobs:
  deploy-backend:
    name: Deploy Backend to VPS
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js 22
        uses: actions/setup-node@v3
        with:
          node-version: '22'
          cache: 'npm'
          cache-dependency-path: 'server/package-lock.json'

      - name: Install backend dependencies
        run: |
          cd server
          npm ci

      - name: Create production environment file
        run: |
          cd server
          cat > .env << EOF
          NODE_ENV=production
          JWT_SECRET=${{ secrets.JWT_SECRET }}
          SESSION_SECRET=${{ secrets.SESSION_SECRET }}
          JWT_AUDIENCE="etymonapp.com/api"
          JWT_ISSUER="etymonapp.com"
          PORT=3000
          CLIENT_URL=https://etymonapp.com
          SERVER_URL=https://api.etymonapp.com
          ALLOWED_ORIGINS=https://etymonapp.com,https://www.etymonapp.com
          GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }}
          GOOGLE_CLIENT_SECRET=${{ secrets.GOOGLE_CLIENT_SECRET }}
          GOOGLE_CALLBACK_URL=https://api.etymonapp.com/api/auth/google/callback
          EMAIL_ADM=${{ secrets.EMAIL_ADM }}
          EOF

      - name: Decode Google credentials
        run: |
          echo "${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}" | base64 -d > google-credentials.json
          echo "GOOGLE_APPLICATION_CREDENTIALS=./google-credentials.json" >> server/.env

      - name: Set up SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.HOSTINGER_HOST }} >> ~/.ssh/known_hosts

      - name: Deploy backend to VPS
        run: |
          rsync -avz --delete --exclude 'node_modules' --exclude '.env.example' server/ ${{ secrets.HOSTINGER_USER }}@${{ secrets.HOSTINGER_HOST }}:/var/www/api.etymonapp.com/
          ssh ${{ secrets.HOSTINGER_USER }}@${{ secrets.HOSTINGER_HOST }} "cd /var/www/api.etymonapp.com && npm ci && pm2 restart etymon-api || pm2 start dist/main.js --name etymon-api"

  deploy-frontend:
    name: Deploy Frontend to VPS
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js for Angular 17
        uses: actions/setup-node@v3
        with:
          node-version: '20'  # Angular 17 is compatible with Node 20
          cache: 'npm'
          cache-dependency-path: 'client/package-lock.json'

      - name: Install frontend dependencies
        run: |
          cd client
          npm ci

      - name: Build frontend for production
        run: |
          cd client
          ng build --configuration production

      - name: Set up SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.HOSTINGER_HOST }} >> ~/.ssh/known_hosts

      - name: Deploy frontend to VPS
        run: |
          rsync -avz --delete client/dist/client/ ${{ secrets.HOSTINGER_USER }}@${{ secrets.HOSTINGER_HOST }}:/var/www/etymonapp.com/

      - name: Configure Nginx (if needed)
        run: |
          ssh ${{ secrets.HOSTINGER_USER }}@${{ secrets.HOSTINGER_HOST }} "sudo systemctl restart nginx"
