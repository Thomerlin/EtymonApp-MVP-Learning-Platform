name: Deploy to Hostinger VPS

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Decode Google Credentials
        run: |
          echo "${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}" | base64 -d > google-credentials.json
          ls -l google-credentials.json
        continue-on-error: true

      - name: Deploy to VPS
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOSTINGER_HOST }}
          username: ${{ secrets.HOSTINGER_USER }}
          port: ${{ secrets.HOSTINGER_PORT }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            set -e
            whoami
            pwd
            # Clone or update repository
            if [ -d "/home/app" ]; then
              cd /home/app
              git pull origin main || { echo "Git pull failed"; exit 1; }
            else
              git clone git@github.com:${{ secrets.REPO_OWNER }}/${{ secrets.REPO_NAME }}.git /home/app || { echo "Git clone failed"; exit 1; }
              cd /home/app
            fi

            # Check for .env
            [ -f "/home/app/.env" ] || { echo "Missing .env file. Please upload manually."; exit 1; }

            # Install frontend dependencies and build
            cd /home/app/client
            npm install || { echo "Frontend npm install failed"; exit 1; }
            npm run build --prod || { echo "Frontend build failed"; exit 1; }

            # Install backend dependencies
            cd /home/app/server
            npm install || { echo "Backend npm install failed"; exit 1; }

            # Restart backend with pm2
            pm2 stop server || true
            pm2 start src/server.js --name server || { echo "pm2 start failed"; exit 1; }
            pm2 save

            # Restart Nginx
            sudo systemctl restart nginx || { echo "Nginx restart failed"; exit 1; }
        env:
          DEBUG: true

      - name: Upload Google Credentials
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOSTINGER_HOST }}
          username: ${{ secrets.HOSTINGER_USER }}
          port: ${{ secrets.HOSTINGER_PORT }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "google-credentials.json"
          target: "/home/app/server/credentials"
          strip_components: 1
        continue-on-error: true